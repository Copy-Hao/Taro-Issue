{"version":3,"file":"common.js","mappings":";;;;;;;;;;AAQA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AA3BA;AAAA;;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;ACxBA","sources":["webpack://hongheng/._src_components_Counter.vue","webpack://hongheng/._src_stores_counter.js","webpack://hongheng/./src/components/Counter.vue?b0ab","webpack://hongheng/./src/components/Counter.vue?842a","webpack://hongheng/./src/components/Counter.vue?3c8e"],"sourcesContent":["<template>\n  <view>\n    <text class=\"title\">{{ counter.count }}</text>\n    <view class=\"button\" @tap=\"onAdd\">ADD</view>\n  </view>\n</template>\n\n<script>\nimport { useCounterStore } from '../stores/counter'\n\nexport default {\n  setup() {\n    const counter = useCounterStore()\n\n    const onAdd = () => {\n      counter.count++\n\n      // with autocompletion âœ¨\n      // counter.$patch({count: counter.count + 1})\n\n      // or using an action instead\n      // counter.increment()\n    }\n\n    return {\n      counter,\n      onAdd\n    }\n  }\n}\n</script>\n\n<style>\n.title {\n  font-size: 32px;\n}\n.button {\n  border: 1px solid lightgray;\n  padding: 5px 10px;\n}\n</style>\n","// https://pinia.esm.dev/introduction.html\nimport { defineStore } from 'pinia'\n\nexport const useCounterStore = defineStore('counter', {\n  state: () => {\n    return { count: 0 }\n  },\n  // could also be defined as\n  // state: () => ({ count: 0 })\n  actions: {\n    increment() {\n      this.count++\n    },\n  },\n})\n\n// You can even use a function (similar to a component setup()) to define a Store for more advanced use cases:\n// export const useCounterStore = defineStore('counter', () => {\n//   const count = ref(0)\n//\n//   function increment() {\n//     count.value++\n//   }\n//\n//   return {count, increment}\n// })","import { render } from \"./Counter.vue?vue&type=template&id=274929fc\"\nimport script from \"./Counter.vue?vue&type=script&lang=js\"\nexport * from \"./Counter.vue?vue&type=script&lang=js\"\n\nimport \"./Counter.vue?vue&type=style&index=0&id=274929fc&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__file',\"src/components/Counter.vue\"]])\n/* hot reload */\nif (module.hot) {\n  __exports__.__hmrId = \"274929fc\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('274929fc', __exports__)) {\n    api.reload('274929fc', __exports__)\n  }\n  \n  module.hot.accept(\"./Counter.vue?vue&type=template&id=274929fc\", () => {\n    api.rerender('274929fc', render)\n  })\n\n}\n\n\nexport default __exports__","export { default } from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-11.use[0]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Counter.vue?vue&type=script&lang=js\"; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-11.use[0]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Counter.vue?vue&type=script&lang=js\"","export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-11.use[0]!../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Counter.vue?vue&type=template&id=274929fc\""],"names":[],"sourceRoot":""}